name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: screenshot_rs.linux-x64.node
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: screenshot_rs.linux-arm64.node
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: screenshot_rs.win32-x64.node
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: screenshot_rs.darwin-x64.node
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: screenshot_rs.darwin-arm64.node

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NAPI_TARGET_TRIPLE: ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: screenshot_rs.node

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create npm package
        run: |
          mkdir -p npm
          cp index.js index.d.ts README.md package.json npm/
          cp artifacts/*.node npm/

          # Update package.json for npm publish
          cd npm
          node -e "
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.version = process.env.GITHUB_REF.replace('refs/tags/v', '');
            pkg.files = ['index.js', 'index.d.ts', 'README.md', '*.node'];
            delete pkg.scripts.prepublishOnly;
            delete pkg.devDependencies;
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Publish to npm
        run: |
          cd npm
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
